# /etc/nginx/nginx.conf

user www-data;
worker_processes auto;
pcre_jit on;
include /etc/nginx/modules/*.conf;
include /etc/nginx/conf.d/*.conf;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    server_tokens off;
    client_max_body_size 1m;
    sendfile on;
    tcp_nopush on;

    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:2m;
    ssl_session_timeout 1h;
    ssl_session_tickets off;

    gzip_vary on;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # Definice JSON log form√°tu
    log_format json_combined escape=json
        '{'
        '"time_local":"$time_local",'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"status": "$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"request_time":"$request_time",'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent"'
        '}';

    log_format json_analytics escape=json '{'
         '"msec": "$msec", ' # request unixtime in seconds with a milliseconds resolution
         '"connection": "$connection", ' # connection serial number
         '"connection_requests": "$connection_requests", ' # number of requests made in connection
         '"pid": "$pid", ' # process pid
         '"request_id": "$request_id", ' # the unique request id
         '"request_length": "$request_length", ' # request length (including headers and body)
         '"remote_addr": "$remote_addr", ' # client IP
         '"remote_user": "$remote_user", ' # client HTTP username
         '"remote_port": "$remote_port", ' # client port
         '"time_local": "$time_local", '
         '"time_iso8601": "$time_iso8601", ' # local time in the ISO 8601 standard format
         '"request": "$request", ' # full path no arguments if the request
         '"request_uri": "$request_uri", ' # full path and arguments if the request
         '"args": "$args", ' # args
         '"status": "$status", ' # response status code
         '"body_bytes_sent": "$body_bytes_sent", ' # the number of body bytes exclude headers sent to a client
         '"bytes_sent": "$bytes_sent", ' # the number of bytes sent to a client
         '"http_referer": "$http_referer", ' # HTTP referer
         '"http_user_agent": "$http_user_agent", ' # user agent
         '"http_x_forwarded_for": "$http_x_forwarded_for", ' # http_x_forwarded_for
         '"http_host": "$http_host", ' # the request Host: header
         '"server_name": "$server_name", ' # the name of the vhost serving the request
         '"request_time": "$request_time", ' # request processing time in seconds with msec resolution
         '"upstream": "$upstream_addr", ' # upstream backend server for proxied requests
         '"upstream_connect_time": "$upstream_connect_time", ' # upstream handshake time incl. TLS
         '"upstream_header_time": "$upstream_header_time", ' # time spent receiving upstream headers
         '"upstream_response_time": "$upstream_response_time", ' # time spend receiving upstream body
         '"upstream_response_length": "$upstream_response_length", ' # upstream response length
         '"upstream_cache_status": "$upstream_cache_status", ' # cache HIT/MISS where applicable
         '"ssl_protocol": "$ssl_protocol", ' # TLS protocol
         '"ssl_cipher": "$ssl_cipher", ' # TLS cipher
         '"scheme": "$scheme", ' # http or https
         '"request_method": "$request_method", ' # request method
         '"server_protocol": "$server_protocol", ' # request protocol, like HTTP/1.1 or HTTP/2.0
         '"pipe": "$pipe", ' # "p" if request was pipelined, "." otherwise
         '"gzip_ratio": "$gzip_ratio", '
         '"http_cf_ray": "$http_cf_ray"'
         '}';

    include /etc/nginx/http.d/*.conf;
}
