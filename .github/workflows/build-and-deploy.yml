name: 🛠️ Create and publish a Docker image
run-name: ${{ github.actor }} running build of new image

concurrency:
  group: "${{ github.ref }}-${{ github.workflow }}"
  cancel-in-progress: true

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  LATEST_PHP_VERSION: 8.3

jobs:
  build:
    name: Build and push Docker image for PHP ${{ matrix.php-version }} on ${{ matrix.platform }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version: ["8.2", "8.3"]
        platform: ["linux/amd64"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get current date for tag
        id: date
        run: |
          echo "date=$(date +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Downcase REPO
        id: imageName
        run: |
          echo "imageName=${IMAGE_NAME,,}" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker PHP
        id: meta
        uses: docker/metadata-action@v5
        with:
          tags: |
            type=ref,enable=true,priority=600,prefix=${{ matrix.php-version }},suffix=-${{ github.sha }}-${{ github.run_id }},event=branch
            type=raw,value=-latest,enable=true,prefix=${{ matrix.php-version }}
          images: |
            ${{ env.REGISTRY }}/${{ steps.imageName.outputs.imageName }}
          labels: |
            org.opencontainers.image.created=${{ steps.date.outputs.date }}
            org.opencontainers.image.description=PHP ${{ matrix.php-version }} FPM with nginx and supervis
            ororg.opencontainers.image.url=https://github.com/${{ github.repository }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
      

      - name: Add "latest" tag conditionally
        if: matrix.php-version == env.LATEST_PHP_VERSION
        run: |
          echo "latest_tag=${{ env.REGISTRY }}/${{ steps.imageName.outputs.imageName }}:latest" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        uses: int128/kaniko-action@v1
        with:
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ env.latest_tag || '' }}
          labels: ${{ steps.meta.outputs.labels }}
          cache: true
          cache-repository: ${{ env.REGISTRY }}/${{ steps.imageName.outputs.imageName }}-cache
          context: .
          file: Dockerfile
